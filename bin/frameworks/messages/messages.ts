import { colors } from '../system/colors';

function Message(str: string, warn: boolean): string {
  if (warn) return `${colors.FgYellow}${str}${colors.Reset}`;
  else return `${colors.FgGreen}${str}${colors.Reset}`;
}

export const MsgConfigDebugCli = Message(
  `USER: Command-Line configuration (Medium priority)\n`,
  true
);
export const MsgConfigDebugEnv = Message(`USER: Environment configuration (Low priority)\n`, true);
export const MsgConfigDebugFinal = Message(
  `SYSTEM: Final user configuration that will be used...\n`,
  true
);
export const MsgConfigDebugRc = Message(
  `USER: .figmagicrc configuration (Highest priority)\n`,
  true
);
export const MsgDownloadFileWritingFile = (path: string): string =>
  `\nWriting Figma graphics to disk: ${path}`;

export const MsgGeneratedFileWarning = Message(
  `THIS FILE IS AUTO-GENERATED BY FIGMAGIC. DO NOT MAKE EDITS IN THIS FILE! CHANGES WILL GET OVER-WRITTEN BY ANY FURTHER PROCESSING.`,
  false
);
export const MsgGetTokenMatchNoMatch = Message(
  `No matching token! Hard-coding to expected value:`,
  true
);
export const MsgJobComplete = Message(`\nFigmagic completed operations successfully!\n`, false);
export const MsgJobCompleteNoActions = Message(
  `\nFigmagic finished, but no sync actions were performed. Was this intentional?\n`,
  false
);
export const MsgProcessElementsCreatingElement = (elementName: string, fixedName: string): string =>
  `Processing Figma element "${elementName}" as ---> ${fixedName}`;

export const MsgSetDataFromApi = Message(`\nAttempting to fetch data from Figma API...`, true);
export const MsgSetDataFromLocal = Message(
  `\nAttempting to recompile data from local Figma JSON file...`,
  true
);
export const MsgSyncElements = Message(`\nAttempting to parse elements...\n`, true);
export const MsgSyncGraphics = Message(`\nGetting images from Figma API...`, true);
export const MsgWriteBaseFile = Message(`\nWriting Figma base file...`, true);
export const MsgWriteTokens = Message(`\nWriting design tokens...`, true);
