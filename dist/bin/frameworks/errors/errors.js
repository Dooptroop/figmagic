"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorWriteTokensNoSettings = exports.ErrorWriteTokens = exports.ErrorWriteGraphics = exports.ErrorWriteFileWrongType = exports.ErrorWriteFile = exports.ErrorWriteElements = exports.ErrorWriteBaseJson = exports.ErrorWrite = exports.ErrorToPascalCase = exports.ErrorMakeZindexTokensNoFrame = exports.ErrorMakeZindexTokensNoChildren = exports.ErrorMakeZindexTokensMissingProps = exports.ErrorMakeSpacingTokensNoUnits = exports.ErrorMakeSpacingTokensNoFrame = exports.ErrorMakeSpacingTokensNoChildren = exports.ErrorMakeSpacingTokensMissingProps = exports.ErrorMakeShadowTokensNoFrame = exports.ErrorMakeShadowTokensNoChildren = exports.ErrorMakeShadowTokensMissingProps = exports.ErrorMakeRadiusTokensNoFrame = exports.ErrorMakeRadiusTokensNoChildren = exports.ErrorMakeRadiusTokensMissingProps = exports.ErrorMakeOpacityTokensNoFrame = exports.ErrorMakeOpacityTokensNoChildren = exports.ErrorMakeOpacityTokensMissingProps = exports.ErrorSetupMediaQueryTokensNoFrame = exports.ErrorSetupMediaQueryTokensNoChildren = exports.ErrorSetupMediaQueryTokensMissingProps = exports.ErrorMakeLineHeightTokensNoFrame = exports.ErrorMakeLineHeightTokensNoChildren = exports.ErrorMakeLineHeightTokensMissingProps = exports.ErrorMakeLineHeightTokensMissingPercent = exports.ErrorMakeLetterSpacingTokensNoFrame = exports.ErrorMakeLetterSpacingTokensNoChildren = exports.ErrorMakeLetterSpacingTokensMissingProps = exports.ErrorMakeFontWeightTokensNoFrame = exports.ErrorMakeFontWeightTokensNoChildren = exports.ErrorMakeFontWeightTokensMissingWeight = exports.ErrorMakeFontWeightTokensMissingProps = exports.ErrorMakeFontTokensNoFrame = exports.ErrorMakeFontTokensNoChildren = exports.ErrorMakeFontTokensMissingProps = exports.ErrorMakeFontSizeTokensNoSizing = exports.ErrorMakeFontSizeTokensNoFrame = exports.ErrorMakeFontSizeTokensNoChildren = exports.ErrorMakeFontSizeTokensMissingSize = exports.ErrorMakeFontSizeTokensMissingProps = exports.ErrorMakeEasingTokensNoFrame = exports.ErrorMakeEasingTokensNoChildren = exports.ErrorMakeEasingTokensMissingProps = exports.ErrorMakeDurationTokensNoFrame = exports.ErrorMakeDurationTokensNoChildren = exports.ErrorMakeDurationTokensMissingProps = exports.ErrorMakeDelayTokensNoFrame = exports.ErrorMakeDelayTokensNoChildren = exports.ErrorMakeDelayTokensMissingProps = exports.ErrorMakeColorTokensNoFrame = exports.ErrorMakeColorTokensNoFills = exports.ErrorMakeColorTokensNoChildren = exports.ErrorMakeBorderWidthTokensNoFrame = exports.ErrorMakeBorderWidthTokensNoChildren = exports.ErrorMakeBorderWidthTokensMissingProps = exports.ErrorSliceOutObjectFromFile = exports.ErrorRoundColorValue = exports.ErrorRoundColor = exports.ErrorReplaceMediaQuery = exports.ErrorRefresh = exports.ErrorProcessNestedCss = exports.ErrorProcessGraphicsNoImages = exports.ErrorProcessGraphicsImageError = exports.ErrorProcessGraphics = exports.ErrorProcessElementsNoMainElement = exports.ErrorProcessElements = exports.ErrorPrepareWrite = exports.ErrorPrepFileStyledComponents = exports.ErrorPrepFileStorybook = exports.ErrorPrepFileDescription = exports.ErrorPrepFileCss = exports.ErrorPrepFileComponent = exports.ErrorParseTypographyStylingFromElement = exports.ErrorUpdateParsing = exports.ErrorParseShadow = exports.ErrorGetShadow = exports.ErrorParseBorderRadius = exports.ErrorParseBorderColor = exports.ErrorGetBorderColor = exports.ErrorParseBorderWidth = exports.ErrorParseBackgroundColor = exports.ErrorGetBackgroundColor = exports.ErrorParsePadding = exports.ErrorParseHeight = exports.ErrorParseElement = exports.ErrorParseCssFromElement = exports.ErrorParseCliArgs = exports.ErrorNormalizeUnitsUndefined = exports.ErrorNormalizeUnitsNoRemSize = exports.ErrorNormalizeUnits = exports.ErrorLoadFile = exports.ErrorHandleNestedElements = exports.ErrorGetUniqueValues = exports.ErrorGetTokenMatchNoRemSize = exports.ErrorGetTokenMatch = exports.ErrorGetPaddingY = exports.ErrorGetPaddingX = exports.ErrorGetIntersectingValues = exports.ErrorGetIdstring = exports.ErrorGetIds = exports.ErrorGetFromApi = exports.ErrorGetFileList = exports.ErrorGetFileContentAndPathNoReturn = exports.ErrorGetFileContentAndPathMissingFields = exports.ErrorGetFileContentAndPath = exports.ErrorGetFileContents = exports.ErrorGetFiles = exports.ErrorGetFontColor = exports.ErrorGetDescription = exports.ErrorGetDataNoTokenOrUrl = exports.ErrorGetDataLocal = exports.ErrorGetDataFailedLocalAndRemote = exports.ErrorGetDataNoData = exports.ErrorGetData = exports.ErrorFindShortenedNameMatchWrongType = exports.ErrorFigmagicController = exports.ErrorExtractTokensNoConfig = exports.ErrorExtractTokens = exports.ErrorExtractDescription = exports.ErrorDownloadFile = exports.ErrorCreateTokens = exports.ErrorCreatePage = exports.ErrorCreateImportStringFromListZeroLength = exports.ErrorCreateImportStringFromList = exports.ErrorCreateGraphics = exports.ErrorCreateFolder = exports.ErrorCreateEnumStringOutOfObject = exports.ErrorCreateElements = exports.ErrorCreateCssString = exports.ErrorCreateConfigurationNoDefault = exports.ErrorCreateConfiguration = exports.ErrorConvertHexToRgba = exports.ErrorCleanArrays = exports.ErrorCamelize = exports.ErrorAddDescriptionToElements = void 0;
const colors_1 = require("../system/colors");
exports.ErrorAddDescriptionToElements = `${colors_1.colors.FgRed}Missing elements and/or components in addDescriptionToElements()!${colors_1.colors.Reset}`;
exports.ErrorCamelize = `${colors_1.colors.FgRed}No string provided to camelize()!${colors_1.colors.Reset}`;
exports.ErrorCleanArrays = `${colors_1.colors.FgRed}Missing one or more of "classNames" and/or "classContent" when calling cleanArrays()!${colors_1.colors.Reset}`;
exports.ErrorConvertHexToRgba = `${colors_1.colors.FgRed}Missing one or more of red, green, blue and alpha in convertHexToRgba()!${colors_1.colors.Reset}`;
exports.ErrorCreateConfiguration = `${colors_1.colors.FgRed}No path provided to createConfiguration()!${colors_1.colors.Reset}`;
exports.ErrorCreateConfigurationNoDefault = `${colors_1.colors.FgRed}No default configuration provided to createConfiguration()!${colors_1.colors.Reset}`;
exports.ErrorCreateCssString = `${colors_1.colors.FgRed}Missing one or more of required arguments: "intersections", "uniqueValues"!${colors_1.colors.Reset}`;
exports.ErrorCreateElements = `${colors_1.colors.FgRed}Missing arguments provided to createElements()!${colors_1.colors.Reset}`;
exports.ErrorCreateEnumStringOutOfObject = `${colors_1.colors.FgRed}No object provided to createEnumStringOutOfObject()!${colors_1.colors.Reset}`;
exports.ErrorCreateFolder = `${colors_1.colors.FgRed}No directory specified for createFolder()!${colors_1.colors.Reset}`;
exports.ErrorCreateGraphics = `${colors_1.colors.FgRed}Missing arguments provided to createGraphics()!${colors_1.colors.Reset}`;
exports.ErrorCreateImportStringFromList = `${colors_1.colors.FgRed}No "importArray" provided to createImportStringFromList()!${colors_1.colors.Reset}`;
exports.ErrorCreateImportStringFromListZeroLength = `${colors_1.colors.FgRed}Provided "importArray" is zero-length when calling createImportStringFromList()!${colors_1.colors.Reset}`;
exports.ErrorCreatePage = `${colors_1.colors.FgRed}No pages provided to createPage()!${colors_1.colors.Reset}`;
exports.ErrorCreateTokens = `${colors_1.colors.FgRed}Missing required arguments when calling createTokens()!${colors_1.colors.Reset}`;
exports.ErrorDownloadFile = `${colors_1.colors.FgRed}Missing one or more of "url", "folder", or "file" arguments in downloadFile()!${colors_1.colors.Reset}`;
exports.ErrorExtractDescription = `${colors_1.colors.FgRed}Missing description in extractDescription()!${colors_1.colors.Reset}`;
exports.ErrorExtractTokens = `${colors_1.colors.FgRed}No sheet or name for processTokens()!${colors_1.colors.Reset}`;
exports.ErrorExtractTokensNoConfig = `${colors_1.colors.FgRed}No config provided to processTokens()!${colors_1.colors.Reset}`;
exports.ErrorFigmagicController = `${colors_1.colors.FgRed}Error in FigmagicController()!${colors_1.colors.Reset}`;
exports.ErrorFindShortenedNameMatchWrongType = `${colors_1.colors.FgRed}Arguments are not of string type!${colors_1.colors.Reset}`;
exports.ErrorGetData = `${colors_1.colors.FgRed}Could not retrieve any data. Are you missing a valid API key?${colors_1.colors.Reset}`;
exports.ErrorGetDataNoData = `${colors_1.colors.FgRed}No data retrieved...${colors_1.colors.Reset}`;
exports.ErrorGetDataFailedLocalAndRemote = `${colors_1.colors.FgRed}Failed to get local and/or remote data in getData()!${colors_1.colors.Reset}`;
exports.ErrorGetDataLocal = `${colors_1.colors.FgRed}Missing arguments when calling getDataLocal()!${colors_1.colors.Reset}`;
exports.ErrorGetDataNoTokenOrUrl = `${colors_1.colors.FgRed}Missing token and/or URL when attempting to get remote data!${colors_1.colors.Reset}`;
exports.ErrorGetDescription = `${colors_1.colors.FgRed}Missing element in getDescription()!${colors_1.colors.Reset}`;
exports.ErrorGetFontColor = `${colors_1.colors.FgRed}Error in getFontColor()!${colors_1.colors.Reset}`;
exports.ErrorGetFiles = `${colors_1.colors.FgRed}Error in getFiles()!${colors_1.colors.Reset}`;
exports.ErrorGetFileContents = `${colors_1.colors.FgRed}Missing path, name and/or format!${colors_1.colors.Reset}`;
exports.ErrorGetFileContentAndPath = `${colors_1.colors.FgRed}Missing argument in getFileContentAndPath()!${colors_1.colors.Reset}`;
exports.ErrorGetFileContentAndPathMissingFields = `${colors_1.colors.FgRed}Missing fields in getFileContentAndPath()!${colors_1.colors.Reset}`;
exports.ErrorGetFileContentAndPathNoReturn = `${colors_1.colors.FgRed}Missing return in getFileContentAndPath()!${colors_1.colors.Reset}`;
exports.ErrorGetFileList = `${colors_1.colors.FgRed}Missing one or more of required arguments: "imageResponse", "ids" and/or "outputFormatGraphics" when calling getFileList()!${colors_1.colors.Reset}`;
exports.ErrorGetFromApi = `${colors_1.colors.FgRed}Missing one or more of required arguments: "figmaToken", "figmaUrl" when attempting to get data from Figma API!${colors_1.colors.Reset}`;
exports.ErrorGetIds = `${colors_1.colors.FgRed}No (or zero-length) array passed to getIds()!${colors_1.colors.Reset}`;
exports.ErrorGetIdstring = `${colors_1.colors.FgRed}Missing required argument "ids" when calling getIdString()!${colors_1.colors.Reset}`;
exports.ErrorGetIntersectingValues = `${colors_1.colors.FgRed}Missing "arrays" argument when calling getIntersectingValues()!${colors_1.colors.Reset}`;
exports.ErrorGetPaddingX = `${colors_1.colors.FgRed}Error when calling getPaddingX()!${colors_1.colors.Reset}`;
exports.ErrorGetPaddingY = `${colors_1.colors.FgRed}Error when calling getPaddingY()!${colors_1.colors.Reset}`;
exports.ErrorGetTokenMatch = `${colors_1.colors.FgRed}Missing one or more of required arguments: "tokens", "tokenFileName", "property", and/or "expectedValue"!${colors_1.colors.Reset}`;
exports.ErrorGetTokenMatchNoRemSize = `${colors_1.colors.FgRed}Missing required "remSize" argument for getTokenMatch() when converting to rem/em!${colors_1.colors.Reset}`;
exports.ErrorGetUniqueValues = `${colors_1.colors.FgRed}Missing one or more of required arguments: "arrays", and/or "intersections" when calling getUniqueValues()!${colors_1.colors.Reset}`;
exports.ErrorHandleNestedElements = `${colors_1.colors.FgRed}Missing element in handleNestedElements()!${colors_1.colors.Reset}`;
exports.ErrorLoadFile = (path) => {
    if (!path)
        throw new Error('No string passed to ErrorLoadFile!');
    return `${colors_1.colors.FgRed}Could not find file: ${path}!${colors_1.colors.Reset}`;
};
exports.ErrorNormalizeUnits = `${colors_1.colors.FgRed}Missing arguments for normalizeUnits()!${colors_1.colors.Reset}`;
exports.ErrorNormalizeUnitsNoRemSize = `${colors_1.colors.FgRed}Missing required "remSize" argument for normalizeUnits() when converting to rem/em!${colors_1.colors.Reset}`;
exports.ErrorNormalizeUnitsUndefined = `${colors_1.colors.FgRed}arguments "rootSize" or "unitSize" are undefined!${colors_1.colors.Reset}`;
exports.ErrorParseCliArgs = `${colors_1.colors.FgRed}No arguments array passed to parseCliArgs()!${colors_1.colors.Reset}`;
exports.ErrorParseCssFromElement = `${colors_1.colors.FgRed}Missing one or more of required arguments: "layoutElement", "textElement", "remSize", and/or "outputTokenFormat" when calling parseCssFromElement()!${colors_1.colors.Reset}`;
exports.ErrorParseElement = `${colors_1.colors.FgRed}Missing one or more of required arguments: "element", and/or "remSize" when calling parseElement()!${colors_1.colors.Reset}`;
exports.ErrorParseHeight = `${colors_1.colors.FgRed}Error in parseHeight()!${colors_1.colors.Reset}`;
exports.ErrorParsePadding = `${colors_1.colors.FgRed}Error in parsePadding()!${colors_1.colors.Reset}`;
exports.ErrorGetBackgroundColor = `${colors_1.colors.FgRed}Error in getBackgroundColor()!${colors_1.colors.Reset}`;
exports.ErrorParseBackgroundColor = `${colors_1.colors.FgRed}Error in parseBackgroundColor()!${colors_1.colors.Reset}`;
exports.ErrorParseBorderWidth = `${colors_1.colors.FgRed}Error in parseBorderWidth()!${colors_1.colors.Reset}`;
exports.ErrorGetBorderColor = `${colors_1.colors.FgRed}Error in getBorderColor()!${colors_1.colors.Reset}`;
exports.ErrorParseBorderColor = `${colors_1.colors.FgRed}Error in parseBorderColor()!${colors_1.colors.Reset}`;
exports.ErrorParseBorderRadius = `${colors_1.colors.FgRed}Error in parseBorderRadius()!${colors_1.colors.Reset}`;
exports.ErrorGetShadow = `${colors_1.colors.FgRed}Error in getShadow()!${colors_1.colors.Reset}`;
exports.ErrorParseShadow = `${colors_1.colors.FgRed}Error in parseShadow()!${colors_1.colors.Reset}`;
exports.ErrorUpdateParsing = `${colors_1.colors.FgRed}Error in updateParsing()!${colors_1.colors.Reset}`;
exports.ErrorParseTypographyStylingFromElement = `${colors_1.colors.FgRed}Missing one or more of required arguments: "element", or "remSize" when calling parseTypographyStylingFromElement()!${colors_1.colors.Reset}`;
exports.ErrorPrepFileComponent = `${colors_1.colors.FgRed}Missing required arguments in type, when calling prepComponent()!${colors_1.colors.Reset}`;
exports.ErrorPrepFileCss = `${colors_1.colors.FgRed}Missing required arguments in type, when calling prepComponent()!${colors_1.colors.Reset}`;
exports.ErrorPrepFileDescription = `${colors_1.colors.FgRed}Missing required arguments in type, when calling prepComponent()!${colors_1.colors.Reset}`;
exports.ErrorPrepFileStorybook = `${colors_1.colors.FgRed}Missing required arguments in type, when calling prepComponent()!${colors_1.colors.Reset}`;
exports.ErrorPrepFileStyledComponents = `${colors_1.colors.FgRed}Missing required arguments in type, when calling prepComponent()!${colors_1.colors.Reset}`;
exports.ErrorPrepareWrite = `${colors_1.colors.FgRed}No templates provided to prepareWrite()! Seems like fallback template path also failed...${colors_1.colors.Reset}`;
exports.ErrorProcessElements = `${colors_1.colors.FgRed}Missing one or more of required arguments: "elementsPage", "config", and/or "components"! Make sure you have a page called "Elements" in your Figma document.${colors_1.colors.Reset}`;
exports.ErrorProcessElementsNoMainElement = `${colors_1.colors.FgRed}No MAIN_ELEMENT in processElements()!${colors_1.colors.Reset}`;
exports.ErrorProcessGraphics = `${colors_1.colors.FgRed}Graphics page is undefined or empty! Make sure you have a page called "Graphics" in your Figma document.${colors_1.colors.Reset}`;
exports.ErrorProcessGraphicsImageError = `${colors_1.colors.FgRed}Error when fetching graphics from Figma API!${colors_1.colors.Reset}`;
exports.ErrorProcessGraphicsNoImages = `${colors_1.colors.FgRed}No images received from Figma API!${colors_1.colors.Reset}`;
exports.ErrorProcessNestedCss = `${colors_1.colors.FgRed}No 'css' string provided to processNestedCss()!${colors_1.colors.Reset}`;
exports.ErrorRefresh = `${colors_1.colors.FgRed}No path provided to refresh()!${colors_1.colors.Reset}`;
exports.ErrorReplaceMediaQuery = `Missing one or more of required arguments: "str", and/or "match" when calling replaceMediaQuery()!${colors_1.colors.Reset}`;
exports.ErrorRoundColor = `${colors_1.colors.FgRed}Error while rounding color value: Required argument "quantity" was not passed in!${colors_1.colors.Reset}`;
exports.ErrorRoundColorValue = `${colors_1.colors.FgRed}Error while rounding color value: Scale value must be equal to or less than 255!${colors_1.colors.Reset}`;
exports.ErrorSliceOutObjectFromFile = `${colors_1.colors.FgRed}Error in sliceOutObjectFromFile()!${colors_1.colors.Reset}`;
exports.ErrorMakeBorderWidthTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "strokeWeight" properties in border width frame!${colors_1.colors.Reset}`;
exports.ErrorMakeBorderWidthTokensNoChildren = `${colors_1.colors.FgRed}Border Width has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeBorderWidthTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeBorderWidthTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeColorTokensNoChildren = `${colors_1.colors.FgRed}Color tokens frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeColorTokensNoFills = `${colors_1.colors.FgRed}Color has no "fills" property!${colors_1.colors.Reset}`;
exports.ErrorMakeColorTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeColorTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeDelayTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "characters" properties in Delay frame!${colors_1.colors.Reset}`;
exports.ErrorMakeDelayTokensNoChildren = `${colors_1.colors.FgRed}Delay frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeDelayTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeDelayTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeDurationTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "characters" properties in Duration frame!${colors_1.colors.Reset}`;
exports.ErrorMakeDurationTokensNoChildren = `${colors_1.colors.FgRed}Duration frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeDurationTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeDurationTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeEasingTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "characters" properties in Easing frame!${colors_1.colors.Reset}`;
exports.ErrorMakeEasingTokensNoChildren = `${colors_1.colors.FgRed}Easing frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeEasingTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeEasingTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeFontSizeTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "style" properties in font sizes frame!${colors_1.colors.Reset}`;
exports.ErrorMakeFontSizeTokensMissingSize = `${colors_1.colors.FgRed}Missing required "style.fontSize" property!${colors_1.colors.Reset}`;
exports.ErrorMakeFontSizeTokensNoChildren = `${colors_1.colors.FgRed}Font size frame is missing "children" array!${colors_1.colors.Reset}`;
exports.ErrorMakeFontSizeTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeFontSizeTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeFontSizeTokensNoSizing = `${colors_1.colors.FgRed}Missing "fontUnit" or "remSize" properties when calling makeFontSizeTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeFontTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "style" properties in font tokens frame!${colors_1.colors.Reset}`;
exports.ErrorMakeFontTokensNoChildren = `${colors_1.colors.FgRed}Font tokens frame is missing "children" array!${colors_1.colors.Reset}`;
exports.ErrorMakeFontTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeFontTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeFontWeightTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "style" properties in font weights frame!${colors_1.colors.Reset}`;
exports.ErrorMakeFontWeightTokensMissingWeight = `${colors_1.colors.FgRed}Missing required "style.fontWeight" property!${colors_1.colors.Reset}`;
exports.ErrorMakeFontWeightTokensNoChildren = `${colors_1.colors.FgRed}Font weights frame is missing "children" array!${colors_1.colors.Reset}`;
exports.ErrorMakeFontWeightTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeFontWeightTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeLetterSpacingTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "style" properties in letter spacing frame!${colors_1.colors.Reset}`;
exports.ErrorMakeLetterSpacingTokensNoChildren = `${colors_1.colors.FgRed}Letter Spacing frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeLetterSpacingTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeLetterSpacingTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeLineHeightTokensMissingPercent = `${colors_1.colors.FgRed}Missing "style.lineHeightPercentFontSize" property in line heights frame!${colors_1.colors.Reset}`;
exports.ErrorMakeLineHeightTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "style" properties in line heights frame!${colors_1.colors.Reset}`;
exports.ErrorMakeLineHeightTokensNoChildren = `${colors_1.colors.FgRed}Line heights frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeLineHeightTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeLineHeightTokens()!${colors_1.colors.Reset}`;
exports.ErrorSetupMediaQueryTokensMissingProps = `${colors_1.colors.FgRed}Missing "absoluteBoundingBox" property in media query frame!${colors_1.colors.Reset}`;
exports.ErrorSetupMediaQueryTokensNoChildren = `${colors_1.colors.FgRed}Media Query frame has no children!${colors_1.colors.Reset}`;
exports.ErrorSetupMediaQueryTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeMediaQueryTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeOpacityTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "characters" properties in opacities frame!${colors_1.colors.Reset}`;
exports.ErrorMakeOpacityTokensNoChildren = `${colors_1.colors.FgRed}Opacities frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeOpacityTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeOpacityTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeRadiusTokensMissingProps = `${colors_1.colors.FgRed}Missing "name"  property in radius frame!${colors_1.colors.Reset}`;
exports.ErrorMakeRadiusTokensNoChildren = `${colors_1.colors.FgRed}Radius frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeRadiusTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeRadiusTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeShadowTokensMissingProps = `${colors_1.colors.FgRed}Missing "effects" property in shadow frame!${colors_1.colors.Reset}`;
exports.ErrorMakeShadowTokensNoChildren = `${colors_1.colors.FgRed}Shadow frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeShadowTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeShadowTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeSpacingTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "absoluteBoundingBox" properties in spacing frame!${colors_1.colors.Reset}`;
exports.ErrorMakeSpacingTokensNoChildren = `${colors_1.colors.FgRed}Spacing frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeSpacingTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeSpacingTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeSpacingTokensNoUnits = `${colors_1.colors.FgRed}Missing "spacingUnit" or "remSize" properties when calling makeSpacingTokens()!${colors_1.colors.Reset}`;
exports.ErrorMakeZindexTokensMissingProps = `${colors_1.colors.FgRed}Missing "name" or "characters" properties in Z index frame!${colors_1.colors.Reset}`;
exports.ErrorMakeZindexTokensNoChildren = `${colors_1.colors.FgRed}Z Index frame has no children!${colors_1.colors.Reset}`;
exports.ErrorMakeZindexTokensNoFrame = `${colors_1.colors.FgRed}No frame for makeZindexTokens()!${colors_1.colors.Reset}`;
exports.ErrorToPascalCase = `${colors_1.colors.FgRed}Missing "str" argument when calling toPascalCase()!${colors_1.colors.Reset}`;
exports.ErrorWrite = `${colors_1.colors.FgRed}Error while attempting to write file!${colors_1.colors.Reset}`;
exports.ErrorWriteBaseJson = `${colors_1.colors.FgRed}Error while attempting to write Figma JSON!${colors_1.colors.Reset}`;
exports.ErrorWriteElements = `${colors_1.colors.FgRed}Missing "elements" and/or "config" properties when calling writeElements()!${colors_1.colors.Reset}`;
exports.ErrorWriteFile = `${colors_1.colors.FgRed}Missing required arguments to correctly run writeFile()!${colors_1.colors.Reset}`;
exports.ErrorWriteFileWrongType = `${colors_1.colors.FgRed}Provided invalid file type to writeFile()!${colors_1.colors.Reset}`;
exports.ErrorWriteGraphics = `${colors_1.colors.FgRed}Missing "fileList" and/or "config" argument when calling writeGraphics()!${colors_1.colors.Reset}`;
exports.ErrorWriteTokens = `${colors_1.colors.FgRed}Less than one token provided to writeTokens()! Make sure you have a page called "Design Tokens" in your Figma document.${colors_1.colors.Reset}`;
exports.ErrorWriteTokensNoSettings = `${colors_1.colors.FgRed}Missing "settings" argument/object when attempting to write tokens!${colors_1.colors.Reset}`;
//# sourceMappingURL=errors.js.map